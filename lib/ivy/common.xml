<project name="common" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property environment="env"/>


  <property name="ivy.jar.dir" value="${basedir}/lib/ivy" />

  <path id="ivy.lib.path">
    <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
  </path>

  <!-- use a local cache dir if it's jenkins (the builder formerly known as hudson) -->
  <property name="user.ivy.defaultCacheDir"
    value="${ivy.default.ivy.user.dir}/cache"/>

  <property name="proj.ivy.defaultCacheDir"
    value="${ivy.project.dir}/ivycache"/>

  <condition property="ivy.defaultCacheDir"
    value="${user.ivy.defaultCacheDir}"
    else="${proj.ivy.defaultCacheDir}">
   <not>
     <equals arg1="${env.USER}" arg2="hudson"></equals>
   </not>
  </condition>
  
  <echo message="default.cache.dir=${ivy.defaultCacheDir}" 
    file="${ivy.jar.dir}/runtime_ivysettings.properties" />
  
  <echo message="ivy default cache dir: ${ivy.defaultCacheDir}"/>

  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

  <!-- here is how we would have configured ivy if we had our own ivysettings file -->
  <ivy:settings file="${ivy.jar.dir}/ivysettings.xml" />
	
    <!-- ================================= 
          target: resolve              
         ================================= -->
    <target name="clean-resolve" depends="clean-lib,resolve"/>

    <target name="resolve" depends="" description="--> resolve and retrieve dependencies with ivy">
        <mkdir dir="${lib.dir}"/> <!-- not usually necessary, ivy creates the directory IF there are dependencies -->
    	
    	<!-- the call to resolve is not mandatory, retrieve makes an implicit call if we don't -->
    	<ivy:resolve/>
    	<ivy:retrieve pattern="${lib.dir}/[conf]/[artifact].[ext]" />
    </target>
    
    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${reports.dir}"/>
    </target>
    

	<!-- ================================= 
          target: clean-lib              
         ================================= -->
    <target name="clean-lib" description="--> clean the project libraries directory (dependencies)">
        <delete includeemptydirs="true">
          <fileset dir="${lib.dir}" excludes="**/ivy/*"/>
        </delete>
    </target>


  <!-- ================================= 
  target: pmd              
  ================================= -->
  <target name="pmd" description="--> generate pmd report">
    <delete dir="${reports.dir}/pmd"/>
    <mkdir dir="${reports.dir}/pmd"/>    
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
  	  <classpath> 
        <fileset dir="${lib.dir}/test" includes="pmd.jar"/>
        <fileset dir="${lib.dir}/test" includes="asm.jar"/>
        <fileset dir="${lib.dir}/test" includes="jaxen.jar"/>
      </classpath>
    </taskdef>
    <pmd shortFilenames="true">
			<ruleset>basic,strings,codesize,design</ruleset>
			<formatter type="xml" toFile="${reports.dir}/pmd/pmd.xml" />
			<formatter type="html" toFile="${reports.dir}/pmd/pmd.html"/>
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
				<exclude name="**/*Test*.java"/>
			</fileset>
		</pmd>
	</target>
	
</project>


